/* Copyright (c) {year} Skyward Experimental Rocketry
 * Authors: {authors}
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

#pragma once

#include "{state_machine_name}Data.h"
#include <events/FSM.h>
#include <LoggerService/LoggerService.h>

namespace {main_namespace}
{{

/**
 * @brief {state_machine_name} state machine
 */
class {state_machine_name}Controller : public FSM<{state_machine_name}Controller>
{{
public:
    {state_machine_name}Controller();
    ~{state_machine_name}Controller();

{states_funcions_declarations}

private:
    {state_machine_name}ControllerStatus status;
    LoggerService& logger = *(LoggerService::getInstance());

{utility_functions_declarations}

    /* --- LOGGER --- */

    void logStatus({state_machine_name}ControllerState state);
    void logStatus();
}};

}}  // namespace {main_namespace}
