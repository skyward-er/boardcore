/* Copyright (c) 2018 Skyward Experimental Rocketry
 * Authors: Luca Mozzarelli
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

#ifdef STANDALONE_CATCH1_TEST
#include  "catch1-tests-entry.cpp"
#endif

#include  <catch.hpp>
#include <iostream>
#include "util/util.h"

#include "kalman/Kalman.h"
static float input[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.000375805877801643, 0.00226056586920299, 0.00690035635772364, 0.00863676216905024, 0.0106303753416240, 0.0154225451419468, 0.0284325863129288, 0.0697974850843419, 0.0836780905347462, 0.0990228355064945, 0.134102596624885, 0.221649898573533, 0.464883406871964, 0.796268514889786, 1.13097166627591, 1.97529038836138, 3.05279778136465, 4.36626813826386, 5.11275505745618, 5.50862406813072, 5.71220708236606, 5.91956824070467, 6.13071203350345, 6.56437993891227, 7.47745564563409, 9.48830878373739, 11.7474311770443, 13.9434124452112, 16.3303731085479, 18.9085067041769, 21.3928513763365, 24.0332298585877, 29.7854342088718, 35.5037245217711, 41.7393510477996, 48.4968581768771, 55.7806973586524, 63.5954723329732, 71.9460942720448, 80.8345766487493, 90.2625455173455, 99.2098156101228, 108.595259349952, 118.419321748753, 128.682704977976, 139.385317763969, 150.527414075490, 162.108518459522, 174.128087029623, 180.301880869704, 186.584787514489, 192.976586314492, 199.477228426521, 206.086378769924, 212.804053445311, 219.629879703007, 226.563670780437, 229.719060400678, 232.896260830613, 239.316031979299, 245.822865600256, 259.097311142115, 272.718807250220, 278.629294410496, 284.602802419885, 290.639278377024, 296.738744586288, 302.901151523188, 309.126476173339, 315.414681619023, 321.765733467686, 328.179586769857, 334.656195442063, 347.797449064536, 361.188958956281, 374.830051917606, 388.719918849932, 402.858030056230, 417.243184519696, 431.874567141532, 438.538714039338, 445.252400460132, 452.015542205583, 458.828058334244, 465.689877913598, 479.561109359697, 493.628736006061, 507.892329382897, 522.351545213984};
static float state1[] = {0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000038, 0.000303, 0.001216, 0.002444, 0.004007, 0.006347, 0.010884, 0.022742, 0.036322, 0.051577, 0.072017, 0.107268, 0.186262, 0.321568, 0.507329, 0.837643, 1.341704, 2.045367, 2.812871, 3.564902, 4.261613, 4.906142, 5.501583, 6.094220, 6.776621, 7.754275, 9.042271, 10.590695, 12.403761, 14.483906, 16.775124, 19.275922, 22.574612, 26.566292, 31.263305, 36.673979, 42.803133, 49.652618, 57.221849, 65.507652, 74.504642, 84.000743, 93.989032, 104.462257, 115.413066, 126.833988, 138.717648, 151.056730, 163.844077, 175.812009, 187.027541, 197.557087, 207.466091, 216.818593, 225.676960, 234.101493, 242.150195, 249.098295, 255.067665, 260.820808, 266.408621, 273.219891, 281.201594, 288.681591, 295.728197, 302.405461, 308.773149, 314.886718, 320.797355, 326.552028, 332.193570, 337.760784, 343.288572, 350.134336, 358.216219, 367.453485, 377.766970, 389.079569, 401.316485, 414.405660, 426.628218, 438.062247, 448.782799, 458.861751, 468.367680, 478.764001, 489.986860, 501.974821, 514.669066};
TEST_CASE("Update test")
{   
    MatrixBase<float, 3, 3> A{1, 0.2, 0.02, 0, 1, 0.2, 0, 0, 1};
    MatrixBase<float, 1, 3> C{1, 0, 0};
    MatrixBase<float, 3, 3> V1{0.01, 0, 0, 0, 0.01, 0, 0, 0, 0.01};
    MatrixBase<float, 1, 1> V2{10};
    MatrixBase<float, 3, 3> P0{0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1};

    Kalman<3, 1> filter{A, C, V1, V2, P0};
    MatrixBase<float, 1, 1> y{};

    for (int i = 0; i < 10; i++)
    {
        y(0,0) = input[i];
        filter.update(y);
        REQUIRE( filter.X(0,0) == Approx(state1[i]) );
    }
}
